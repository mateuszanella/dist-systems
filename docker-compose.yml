services:
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123123123
      MYSQL_DATABASE: prod
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      interval: 5s
      timeout: 5s
      retries: 10
      test: mysqladmin ping -h 127.0.0.1 -u root --password="123123123"

  api-golang:
    build:
      context: ./app-golang
    command: ./api
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  worker-golang:
    build:
      context: ./app-golang
    command: ./worker
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  api-nodejs:
    build:
      context: ./app-nodejs
    command: node src/api.js
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  worker-nodejs:
    build:
      context: ./app-nodejs
    command: node src/worker.js
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  # WIP: Rust Application Services
#   api-rust:
#     build:
#       context: ./app-rust
#     command: ["/app/app", "server"]
#     ports:
#       - "8081:8080" # Expose Rust API on port 8081
#     depends_on:
#       mysql:
#         condition: service_healthy
#     restart: unless-stopped

#   worker-rust:
#     build:
#       context: ./app-rust
#     command: ["/app/app", "worker"]
#     depends_on:
#       mysql:
#         condition: service_healthy
#     restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-golang
      - api-nodejs
    restart: unless-stopped

volumes:
  mysql_data: